{
  "fileName": "text-localization.tsx",
  "filePath": "examples/src/examples/user-interface/text-localization.tsx",
  "url": "https://github.com/playcanvas/engine/examples/src/examples/user-interface/text-localization.tsx",
  "summary": "The `TextLocalizationExample` class is a code example that demonstrates how to use the PlayCanvas engine to create a localized text user interface. The purpose of this code is to show how to create a basic text element, a camera, and a 2D screen, and how to use the PlayCanvas engine's i18n (internationalization) system to change the text displayed on the screen based on the user's locale.\n\nThe `example` method takes two parameters: a canvas element and a device type. It creates a graphics device using the `pc.createGraphicsDevice` method, which takes the canvas and a set of graphics options as parameters. It then creates an `AppBase` instance using the graphics device and a set of app options. The app options include the component systems and resource handlers that the app will use.\n\nThe `example` method then loads the font asset and starts the app. It adds data to the i18n system that maps the \"HELLO\" key to a message in each of the supported locales. It creates a camera, a 2D screen, and a basic text element, and adds them to the app's root entity. It also creates four buttons, each with a label that corresponds to a supported locale. When a button is clicked, the i18n system's locale is changed to the locale corresponding to the button's label.\n\nThe `createButton` function creates a button entity with an image and a label. The label's text corresponds to the locale that the button represents. When the button is clicked, the i18n system's locale is changed to the locale corresponding to the button's label.\n\nThis code example demonstrates how to use the PlayCanvas engine's i18n system to create a localized text user interface. It can be used as a starting point for creating more complex user interfaces that support multiple languages.",
  "questions": "1. What is the purpose of this code?\n- This code is an example of text localization in the PlayCanvas engine, which allows developers to create multilingual applications.\n\n2. What dependencies does this code have?\n- This code imports the entire PlayCanvas engine, as well as the pc module from a relative path.\n\n3. What is the expected output of this code?\n- This code creates a canvas and populates it with a text element and four buttons, each of which changes the locale of the text element when clicked. The text element displays a greeting in the selected language."
}