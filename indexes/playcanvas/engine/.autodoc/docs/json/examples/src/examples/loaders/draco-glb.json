{
  "fileName": "draco-glb.tsx",
  "filePath": "examples/src/examples/loaders/draco-glb.tsx",
  "url": "https://github.com/playcanvas/engine/examples/src/examples/loaders/draco-glb.tsx",
  "summary": "The code is an example of how to load and render a 3D model in the PlayCanvas engine using the Draco GLB format. The Draco GLB format is a compressed version of the GLB format, which is a binary format for 3D models. The code imports the PlayCanvas engine and defines a class called DracoGlbExample. The class has a static CATEGORY property that defines the category of the example, a static NAME property that defines the name of the example, and a static WEBGPU_ENABLED property that defines whether the example is enabled for WebGPU.\n\nThe example method of the class takes an HTML canvas element and a device type as arguments. The method loads the Draco decoder module using the pc.WasmModule.setConfig method and the pc.WasmModule.getInstance method. The method then creates a graphics device using the pc.createGraphicsDevice method and sets the canvas fill mode and resolution using the app.setCanvasFillMode and app.setCanvasResolution methods. The method loads a 3D model in the Draco GLB format using the pc.AssetListLoader and adds the model to the scene using the app.root.addChild method. The method also creates a camera entity and a light entity and adds them to the scene using the app.root.addChild method. Finally, the method starts the app and adds an update event listener that rotates the 3D model.\n\nThis code can be used as a starting point for loading and rendering 3D models in the Draco GLB format in the PlayCanvas engine. Developers can modify the code to load different 3D models and add different entities to the scene. For example, developers can change the URL of the 3D model in the assets object to load a different model. Developers can also add different types of entities to the scene, such as a skybox entity or a particle system entity. The code demonstrates how to use the PlayCanvas engine to create interactive 3D applications that run in a web browser.",
  "questions": "1. What is the purpose of the `DracoGlbExample` class?\n- The `DracoGlbExample` class is an example class that loads a GLB model using the Draco decoder and displays it on a canvas using the PlayCanvas engine.\n\n2. What is the significance of the `WEBGPU_ENABLED` property?\n- The `WEBGPU_ENABLED` property is a boolean value that indicates whether the example supports the WebGPU API or not.\n\n3. What is the purpose of the `demo` function?\n- The `demo` function is a callback function that is called after the Draco decoder module is loaded. It initializes the PlayCanvas app and starts rendering the GLB model on the canvas."
}