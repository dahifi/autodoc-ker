{
  "fileName": "positional.tsx",
  "filePath": "examples/src/examples/sound/positional.tsx",
  "url": "https://github.com/playcanvas/engine/examples/src/examples/sound/positional.tsx",
  "summary": "The `PositionalExample` class is a code example that demonstrates how to use the PlayCanvas engine to create a 3D scene with a walking character that emits positional audio. The purpose of this code is to showcase the capabilities of the PlayCanvas engine and provide developers with a starting point for creating similar projects.\n\nThe `example` method is the main entry point of the code and takes two parameters: a `canvas` element and a `deviceType` string. It creates a new `pc.Application` instance with the given `canvas` element and an empty options object. It then creates a list of assets that are required for the scene, including a 3D model of a character, an animation for the character, and an audio file for the footsteps.\n\nThe `AssetListLoader` class is used to load all the assets asynchronously. Once the assets are loaded, the code creates a camera entity, a ground entity, a light entity, and a walking character entity. The camera entity is positioned and rotated to provide a good view of the scene. The ground entity is a simple box with a gray material. The light entity is a directional light that casts shadows. The walking character entity is created with a 3D model, an animation, and a sound component.\n\nThe walking character entity is positioned and rotated in a circular path around the center of the scene. The `update` event is used to update the position and rotation of the character entity on every frame. The `setLocalPosition` and `setLocalEulerAngles` methods are used to set the position and rotation of the character entity relative to its parent entity.\n\nThe `sound` component of the character entity is used to emit positional audio for the footsteps. The `addSlot` method is used to add a new sound slot with the `gravel` audio asset. The `pitch` property is set to 1.7 to make the footsteps sound faster. The `loop` property is set to true to make the sound loop continuously. The `autoPlay` property is set to true to make the sound start playing automatically.\n\nOverall, this code demonstrates how to use the PlayCanvas engine to create a 3D scene with a walking character that emits positional audio. It shows how to load assets, create entities, position and rotate entities, and use the sound component to emit audio. This code can be used as a starting point for creating similar projects with the PlayCanvas engine.",
  "questions": "1. What is the purpose of the `PositionalExample` class?\n- The `PositionalExample` class is an example implementation of a sound feature in the PlayCanvas engine.\n\n2. What assets are being loaded in the `example` method?\n- The `example` method loads a 3D model, an animation, and an audio file.\n\n3. What is the purpose of the `update` event listener?\n- The `update` event listener updates the position and rotation of the walking dude entity in the scene."
}