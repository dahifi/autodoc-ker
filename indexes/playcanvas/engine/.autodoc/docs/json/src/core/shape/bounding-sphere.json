{
  "fileName": "bounding-sphere.js",
  "filePath": "src/core/shape/bounding-sphere.js",
  "url": "https://github.com/playcanvas/engine/src/core/shape/bounding-sphere.js",
  "summary": "The code defines a class called `BoundingSphere` which represents a sphere-shaped volume used for fast intersection testing. The class has two properties: `center`, which is a `Vec3` object representing the center of the sphere, and `radius`, which is a number representing the radius of the sphere. \n\nThe constructor of the `BoundingSphere` class takes two optional parameters: `center` and `radius`. If `center` is not provided, a new `Vec3` object is created with default values. If `radius` is not provided, it defaults to 0.5. \n\nThe `BoundingSphere` class has three methods: \n\n1. `containsPoint(point)`: This method takes a `Vec3` object representing a point in 3D space and returns a boolean indicating whether the point is inside the sphere or not. It does this by calculating the distance between the point and the center of the sphere, and checking if it is less than the radius of the sphere. \n\n2. `intersectsRay(ray, point)`: This method takes a `Ray` object and an optional `Vec3` object. It returns a boolean indicating whether the ray intersects with the sphere or not. If there is an intersection and `point` is provided, the intersection point is copied into the `point` object. The method first calculates the distance between the origin of the ray and the center of the sphere, and then checks if the ray is pointing towards or away from the sphere. If the ray is pointing away from the sphere, there is no intersection. If the ray is pointing towards the sphere, the method calculates the smallest `t` value of intersection and uses it to compute the intersection point. \n\n3. `intersectsBoundingSphere(sphere)`: This method takes another `BoundingSphere` object and returns a boolean indicating whether the two spheres are overlapping, enveloping, or one is inside the other. It does this by calculating the distance between the centers of the two spheres and checking if it is less than the sum of their radii. \n\nOverall, the `BoundingSphere` class is used to represent a sphere-shaped volume for fast intersection testing. It can be used in various parts of the PlayCanvas engine where such volumes are needed, such as collision detection, physics simulation, and raycasting. For example, it can be used to check if a ray fired by the player intersects with an enemy's hitbox, or if a player's character is inside a trigger volume.",
  "questions": "1. What is the purpose of the `BoundingSphere` class?\n- The `BoundingSphere` class is used to create a volume for fast intersection testing.\n\n2. What parameters does the constructor of the `BoundingSphere` class accept?\n- The constructor of the `BoundingSphere` class accepts two optional parameters: `center` (a `Vec3` object representing the center of the sphere) and `radius` (a number representing the radius of the sphere).\n\n3. What is the purpose of the `intersectsRay` method?\n- The `intersectsRay` method is used to test if a ray intersects with the sphere and returns `true` if there is an intersection. It also has an optional `point` parameter that, if provided, will contain the intersection point."
}