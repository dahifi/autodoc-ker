{
  "fileName": "lit-options.js",
  "filePath": "src/scene/materials/lit-options.js",
  "url": "https://github.com/playcanvas/engine/src/scene/materials/lit-options.js",
  "summary": "The code defines a class called `LitOptions` which is used to specify a set of parameters that determine how the lit-shader gets generated. The class contains a large number of properties that can be set to enable or disable various features of the shader. These properties include options for enabling/disabling alpha testing, hardware instancing, morphing, and various types of maps (e.g. light maps, normal maps, etc.). There are also options for specifying custom shader chunks and for overriding the default fragment shader with a custom one. \n\nThe purpose of this class is to provide a way for developers to customize the lit-shader to suit their needs. By setting the various properties of the `LitOptions` object, developers can enable or disable specific features of the shader, or even replace entire chunks of the shader code with custom code. This allows for a high degree of flexibility in how the shader is generated, which can be useful in a variety of contexts.\n\nFor example, a developer might use `LitOptions` to create a custom shader that includes support for a specific type of map that is not supported by the default shader. They could do this by setting the appropriate property of the `LitOptions` object to `true`, and then overriding the default shader code with custom code that handles the new map type. \n\nOverall, `LitOptions` is an important part of the PlayCanvas engine, as it provides developers with a powerful tool for customizing the lit-shader to suit their needs.",
  "questions": "1. What is the purpose of the `LitOptions` class?\n- The `LitOptions` class determines how the lit-shader gets generated by specifying a set of parameters which triggers different fragment and vertex shader generation in the backend.\n\n2. What are some of the properties that can be set on an instance of `LitOptions`?\n- Some of the properties that can be set on an instance of `LitOptions` include `alphaTest`, `useInstancing`, `useMorphPosition`, `useMorphNormal`, `useDiffuseMap`, `useSpecular`, `useMetalness`, `fog`, `gamma`, `toneMap`, and many others.\n\n3. What is the purpose of the `pass` getter and setter in `LitOptions`?\n- The `pass` getter and setter in `LitOptions` are used to get and set the `_pass` property, which is used by the parent `StandardMaterialOptions` class. However, attempting to set `pass` directly on an instance of `LitOptions` will result in a warning message being logged to the console."
}