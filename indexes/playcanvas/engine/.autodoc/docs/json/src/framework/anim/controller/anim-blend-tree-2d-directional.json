{
  "fileName": "anim-blend-tree-2d-directional.js",
  "filePath": "src/framework/anim/controller/anim-blend-tree-2d-directional.js",
  "url": "https://github.com/playcanvas/engine/src/framework/anim/controller/anim-blend-tree-2d-directional.js",
  "summary": "The code defines a class called `AnimBlendTreeDirectional2D` which extends another class called `AnimBlendTree`. This class calculates the weights of its children nodes using a 2D directional algorithm based on a thesis by Rune Skovbo Johansen. \n\nThe `AnimBlendTreeDirectional2D` class has two static properties `_p` and `_pip` which are instances of the `Vec2` class from the `../../../core/math/vec2.js` module. These properties are used to store 2D vectors that are used in the calculation of the weights of the child nodes.\n\nThe `pointCache` method is used to cache the 2D vector values for each pair of child nodes. It takes two arguments `i` and `j` which are indices of the child nodes. It calculates the 2D vector value for the pair of child nodes using the formulae from the thesis and returns the value. If the value has already been calculated, it returns the cached value.\n\nThe `calculateWeights` method is used to calculate the weights of the child nodes. It first checks if the parameter values have been updated and returns if they have. It then calculates the length of the parameter vector and initializes two variables `weightSum` and `weightedDurationSum` to 0.0. It then iterates over each child node and calculates the weight of the node using the formulae from the thesis. It also calculates the weighted duration sum if `_syncAnimations` is true. Finally, it iterates over each child node again and sets the weight and weighted speed of the node.\n\nThis class is used in the larger project to blend animations based on the direction of the parameter vector. It is a specific implementation of the `AnimBlendTree` class that uses a directional algorithm to calculate the weights of the child nodes. It can be used to blend animations in a more natural way based on the direction of the parameter vector. \n\nExample usage:\n\n```javascript\nimport { AnimBlendTreeDirectional2D } from './anim-blend-tree-directional-2d.js';\n\nconst blendTree = new AnimBlendTreeDirectional2D();\n// add child nodes to the blend tree\nblendTree.addChild(childNode1);\nblendTree.addChild(childNode2);\n// set parameter values\nblendTree.setParameterValues(0.5, 0.5);\n// calculate weights of child nodes\nblendTree.calculateWeights();\n// get the blended animation\nconst blendedAnimation = blendTree.getBlendedAnimation();\n```",
  "questions": "1. What is the purpose of the `AnimBlendTreeDirectional2D` class and how does it differ from the `AnimBlendTree` class it extends?\n    \n    Answer: The `AnimBlendTreeDirectional2D` class is a subclass of `AnimBlendTree` that calculates its weights using a 2D directional algorithm based on a thesis. It differs from `AnimBlendTree` in that it uses a different algorithm to calculate weights.\n\n2. What is the significance of the `pointCache` method and how is it used in the `calculateWeights` method?\n    \n    Answer: The `pointCache` method is used to cache the results of a calculation involving two child nodes of the blend tree. It is used in the `calculateWeights` method to avoid redundant calculations and improve performance.\n\n3. What is the purpose of the `weightSum` and `weightedDurationSum` variables in the `calculateWeights` method?\n    \n    Answer: The `weightSum` variable is used to calculate the sum of the weights of all child nodes in the blend tree, while the `weightedDurationSum` variable is used to calculate the sum of the durations of all child animations weighted by their respective weights. These variables are used to normalize the weights and durations of child nodes in the blend tree."
}