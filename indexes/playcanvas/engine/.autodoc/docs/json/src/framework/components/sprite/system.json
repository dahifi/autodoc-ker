{
  "fileName": "system.js",
  "filePath": "src/framework/components/sprite/system.js",
  "url": "https://github.com/playcanvas/engine/src/framework/components/sprite/system.js",
  "summary": "The `SpriteComponentSystem` class is responsible for managing the creation of `SpriteComponent`s in the PlayCanvas engine. It extends the `ComponentSystem` class and provides functionality for creating, updating, and destroying `SpriteComponent`s.\n\nThe `SpriteComponentSystem` class has several properties that are used to create and manage `SpriteComponent`s. These include the `defaultTexture`, `defaultMaterial`, `default9SlicedMaterialSlicedMode`, and `default9SlicedMaterialTiledMode`. These properties are used to create default textures and materials that are used by `SpriteComponent`s when no other texture or material is specified.\n\nThe `SpriteComponentSystem` class also has methods for initializing component data, cloning components, and updating components. The `initializeComponentData` method is used to initialize the data for a new `SpriteComponent`. The `cloneComponent` method is used to clone an existing `SpriteComponent`. The `onUpdate` method is called every frame to update the state of all `SpriteComponent`s.\n\nThe `SpriteComponentSystem` class is used in the larger PlayCanvas engine project to provide a way to create and manage 2D sprites. It is used by game developers to create and manage sprites in their games. The `SpriteComponent` class is used to represent a sprite and provides functionality for rendering, animating, and interacting with the sprite. The `SpriteComponentSystem` class is used to manage the creation and updating of `SpriteComponent`s, and provides default textures and materials that can be used by `SpriteComponent`s when no other texture or material is specified.\n\nExample usage:\n\n```javascript\nimport { SpriteComponentSystem } from 'playcanvas';\n\n// create a new sprite component system\nconst spriteSystem = new SpriteComponentSystem(app);\n\n// create a new sprite component\nconst spriteComponent = spriteSystem.addComponent(entity, {\n    spriteAsset: spriteAsset,\n    width: 100,\n    height: 100\n});\n\n// update the sprite component\nspriteComponent.width = 200;\nspriteComponent.height = 200;\n```",
  "questions": "1. What is the purpose of this code file?\n- This code file manages the creation of SpriteComponents in the PlayCanvas engine.\n\n2. What is the default material used by sprites?\n- The default material used by sprites is a StandardMaterial with a white emissive texture that can be tinted with an emissive color.\n\n3. What does the onUpdate method do?\n- The onUpdate method advances the current clip of enabled SpriteComponents by a given delta time."
}