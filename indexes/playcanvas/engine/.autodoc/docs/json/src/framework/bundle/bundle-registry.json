{
  "fileName": "bundle-registry.js",
  "filePath": "src/framework/bundle/bundle-registry.js",
  "url": "https://github.com/playcanvas/engine/src/framework/bundle/bundle-registry.js",
  "summary": "# BundleRegistry Class\n\nThe `BundleRegistry` class is responsible for keeping track of which assets are in bundles and loading files from bundles. This class is used internally by the PlayCanvas engine and is not intended to be used directly by developers.\n\n## Constructor\n\nThe constructor takes an instance of the `AssetRegistry` class as its only argument. It initializes several internal indexes and registers event listeners for when assets are added or removed from the registry.\n\n## Methods\n\n### _onAssetAdded(asset)\n\nThis method is called when an asset is added to the registry. If the asset is a bundle, it is added to the `_bundleAssets` index and its referenced assets are indexed in the `_assetsInBundles` index. If the asset is not a bundle, its URLs are indexed in the `_urlsInBundles` index.\n\n### _registerBundleEventListeners(bundleAssetId)\n\nThis method registers event listeners for when a bundle asset is loaded or fails to load.\n\n### _unregisterBundleEventListeners(bundleAssetId)\n\nThis method unregisters event listeners for a bundle asset.\n\n### _indexAssetInBundle(assetId, bundleAsset)\n\nThis method indexes an asset and its file URLs in the `_assetsInBundles` and `_urlsInBundles` indexes, respectively.\n\n### _indexAssetFileUrls(asset)\n\nThis method indexes the file URLs of an asset in the `_urlsInBundles` index.\n\n### _getAssetFileUrls(asset)\n\nThis method returns an array of all possible URLs for an asset.\n\n### _normalizeUrl(url)\n\nThis method removes query parameters from a URL.\n\n### _onAssetRemoved(asset)\n\nThis method is called when an asset is removed from the registry. If the asset is a bundle, it is removed from the `_bundleAssets` index and its referenced assets are removed from the `_assetsInBundles` and `_urlsInBundles` indexes. If the asset is not a bundle, its URLs are removed from the `_urlsInBundles` index.\n\n### _onBundleLoaded(bundleAsset)\n\nThis method is called when a bundle asset is loaded. It resolves any pending file requests that can be satisfied by the bundle.\n\n### _onBundleError(err, bundleAsset)\n\nThis method is called when a bundle asset fails to load. It searches for other bundles that can satisfy any pending file requests for the URLs in the failed bundle. If no other bundles are found, the file requests are failed with the specified error.\n\n### _findLoadedOrLoadingBundleForUrl(url)\n\nThis method finds a bundle that contains the specified URL and is either loaded or currently being loaded.\n\n### listBundlesForAsset(asset)\n\nThis method lists all available bundles that reference the specified asset.\n\n### list()\n\nThis method lists all available bundles, including those that are not loaded.\n\n### hasUrl(url)\n\nThis method returns true if there is a bundle that contains the specified URL.\n\n### canLoadUrl(url)\n\nThis method returns true if there is a bundle that contains the specified URL and that bundle is either loaded or currently being loaded.\n\n### loadUrl(url, callback)\n\nThis method loads the specified file URL from a bundle that is either loaded or currently being loaded. The callback is called when the file has been loaded or if an error occurs.\n\n### destroy()\n\nThis method destroys the registry and releases its resources.",
  "questions": "1. What is the purpose of the `BundleRegistry` class?\n    \n    The `BundleRegistry` class keeps track of which assets are in bundles and loads files from bundles.\n\n2. What methods are available in the `BundleRegistry` class?\n    \n    The `BundleRegistry` class has methods such as `listBundlesForAsset`, `list`, `hasUrl`, `canLoadUrl`, `loadUrl`, and `destroy`.\n\n3. What is the role of the `_fileRequests` property in the `BundleRegistry` class?\n    \n    The `_fileRequests` property contains requests to load file URLs indexed by URL. If there are any pending file requests that can be satisfied by a specified bundle, then they are resolved."
}