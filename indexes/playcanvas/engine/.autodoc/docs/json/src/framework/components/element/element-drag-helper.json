{
  "fileName": "element-drag-helper.js",
  "filePath": "src/framework/components/element/element-drag-helper.js",
  "url": "https://github.com/playcanvas/engine/src/framework/components/element/element-drag-helper.js",
  "summary": "The code defines a class called `ElementDragHelper` that provides functionality to make it easy to create elements that can be dragged by the mouse or touch. The class extends the `EventHandler` class and has several methods and properties that enable it to perform its functionality.\n\nThe class constructor takes two parameters: `element` and `axis`. `element` is an instance of the `ElementComponent` class, which is the element that should become draggable. `axis` is an optional parameter that constrains the drag movement to either the x or y axis. If `axis` is not provided, the drag movement is not constrained.\n\nThe class has several events that are fired during the drag operation. The `drag:start` event is fired when a new drag operation starts. The `drag:end` event is fired when the current drag operation ends. The `drag:move` event is fired whenever the position of the dragged element changes.\n\nThe class has several private properties that are used during the drag operation. `_dragScale` is a `Vec3` that stores the scale of the dragged element. `_dragStartMousePosition` is a `Vec3` that stores the starting position of the mouse or touch input. `_dragStartHandlePosition` is a `Vec3` that stores the starting position of the dragged element. `_deltaMousePosition` is a `Vec3` that stores the change in position of the mouse or touch input. `_deltaHandlePosition` is a `Vec3` that stores the change in position of the dragged element. `_isDragging` is a boolean that indicates whether a drag operation is currently in progress.\n\nThe class has several private methods that are used during the drag operation. `_toggleLifecycleListeners` is a method that adds or removes event listeners for the `mousedown`, `touchstart`, and `selectstart` events on the dragged element. `_toggleDragListeners` is a method that adds or removes event listeners for the `mousemove`, `mouseup`, `touchmove`, `touchend`, `touchcancel`, `selectmove`, and `selectend` events on the dragged element. `_onMouseDownOrTouchStart` is a method that is called when the `mousedown`, `touchstart`, or `selectstart` event is fired on the dragged element. It initializes the drag operation by setting the starting positions of the mouse or touch input and the dragged element. `_onMouseUpOrTouchEnd` is a method that is called when the `mouseup`, `touchend`, or `touchcancel` event is fired on the dragged element. It ends the drag operation by resetting the `_isDragging` property and removing the event listeners. `_screenToLocal` is a method that calculates the intersection point of the plane and ray based on the mouse or touch input. `_determineInputPosition` is a method that determines the position of the mouse or touch input. `_chooseRayOriginAndDirection` is a method that chooses the origin and direction of the ray based on the screen space of the dragged element. `_calculateDragScale` is a method that calculates the scale of the dragged element based on its parent elements.\n\nThe class has several public properties that can be accessed and modified. `enabled` is a boolean that indicates whether the drag operation is enabled or not. `isDragging` is a boolean that indicates whether a drag operation is currently in progress.\n\nOverall, the `ElementDragHelper` class provides a simple way to create draggable elements in the PlayCanvas engine. It handles the mouse and touch input, calculates the intersection point of the plane and ray, and updates the position of the dragged element. It also fires events during the drag operation that can be used to perform additional actions.",
  "questions": "1. What is the purpose of the `ElementDragHelper` class?\n- The `ElementDragHelper` class is a helper class that makes it easy to create Elements that can be dragged by the mouse or touch.\n\n2. What are the events that can be fired by the `ElementDragHelper` class?\n- The `ElementDragHelper` class can fire three events: `drag:start`, `drag:end`, and `drag:move`.\n\n3. What is the purpose of the `_calculateDragScale` method?\n- The `_calculateDragScale` method calculates the drag scale of the element being dragged, taking into account the scale of its parent elements."
}