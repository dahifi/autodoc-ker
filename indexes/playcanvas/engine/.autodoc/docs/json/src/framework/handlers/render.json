{
  "fileName": "render.js",
  "filePath": "src/framework/handlers/render.js",
  "url": "https://github.com/playcanvas/engine/src/framework/handlers/render.js",
  "summary": "The code defines a `RenderHandler` class that implements the `ResourceHandler` interface. This handler is used for loading `Render` resources in the PlayCanvas engine project. The `RenderHandler` class has three methods: `load`, `open`, and `patch`.\n\nThe `load` method is empty and does not perform any action. The `open` method creates a new `Render` object and returns it. The `patch` method is called when a new `Render` asset is added to the registry. It checks if the `Render` asset has a `containerAsset` property. If it does, it retrieves the container asset from the registry. If the container asset is not found, it registers a callback to be called when the container asset is added to the registry. If the container asset is found, it calls the `onContainerAssetAdded` function with the container asset as an argument.\n\nThe `onContainerAssetAdded` function is called when a container asset is added to the registry. It removes any existing event listeners for the container asset and registers new ones. It then checks if the container asset has a resource. If it does not, it loads the container asset. If it does, it calls the `onContainerAssetLoaded` function with the container asset as an argument.\n\nThe `onContainerAssetLoaded` function is called when a container asset is loaded. It retrieves the `Render` asset and the container resource. It then retrieves the `Render` object from the container resource using the `renderIndex` property of the `Render` asset. If the `Render` object is found, it sets the `meshes` property of the `Render` asset's resource to the `meshes` property of the `Render` object's resource.\n\nThe `onContainerAssetRemoved` function is called when a container asset is removed from the registry. It removes the event listener for the container asset and destroys the `Render` asset's resource if it exists.\n\nOverall, this code defines a `RenderHandler` class that is used for loading `Render` resources in the PlayCanvas engine project. It provides methods for loading, opening, and patching `Render` assets. The `patch` method retrieves the container asset and calls the `onContainerAssetAdded` function. The `onContainerAssetAdded` function registers event listeners for the container asset and loads it if it is not loaded. The `onContainerAssetLoaded` function retrieves the `Render` object from the container resource and sets the `meshes` property of the `Render` asset's resource. The `onContainerAssetRemoved` function removes the event listener for the container asset and destroys the `Render` asset's resource.",
  "questions": "1. What is the purpose of the `onContainerAssetLoaded` function?\n   - The `onContainerAssetLoaded` function is called when a container asset is loaded and it sets the meshes of the render asset's resource to the meshes of the loaded container resource's render at the specified index.\n\n2. What is the `RenderHandler` class used for?\n   - The `RenderHandler` class is a resource handler used for loading `Render` resources and it implements the `ResourceHandler` interface.\n\n3. What happens in the `patch` method of the `RenderHandler` class?\n   - The `patch` method of the `RenderHandler` class checks if the render asset has a container asset and if it does, it either calls `onContainerAssetAdded` with the container asset or adds a listener to the registry for when the container asset is added."
}