{
  "fileName": "graph.js",
  "filePath": "extras/mini-stats/graph.js",
  "url": "https://github.com/playcanvas/engine/extras/mini-stats/graph.js",
  "summary": "The `Graph` class is responsible for creating and updating a real-time performance graph visual. It is designed to be used within the PlayCanvas engine project. \n\nThe constructor takes in several parameters including `name`, `app`, `watermark`, `textRefreshRate`, and `timer`. `name` is a string that represents the name of the graph. `app` is an instance of the PlayCanvas application. `watermark` is a number that represents the maximum value of the graph. `textRefreshRate` is the rate at which the text on the graph is refreshed. `timer` is an instance of the `pc.Timer` class that is used to measure the performance of the application.\n\nThe `Graph` class has several properties including `device`, `enabled`, `avgTotal`, `avgTimer`, `avgCount`, `timingText`, `texture`, `yOffset`, `cursor`, and `sample`. `device` is an instance of the PlayCanvas graphics device. `enabled` is a boolean that determines whether the graph is enabled or not. `avgTotal`, `avgTimer`, and `avgCount` are used to calculate the average performance of the application. `timingText` is a string that represents the average performance of the application. `texture` is a WebGL texture that is used to render the graph. `yOffset` is the y-offset of the graph. `cursor` is the current position of the graph. `sample` is a `Uint8ClampedArray` that is used to store the latest sample of the graph.\n\nThe `Graph` class has two methods, `loseContext` and `update`. `loseContext` is called when the context is lost and releases all context-related resources. `update` is called on every frame update and is responsible for updating the graph. It calculates the total performance of the application, updates the average performance, and updates the graph texture.\n\nThe `Graph` class also has a `render` method that is responsible for rendering the graph. It takes in several parameters including `render2d`, `x`, `y`, `w`, and `h`. `render2d` is an instance of the PlayCanvas 2D renderer. `x`, `y`, `w`, and `h` are the x-position, y-position, width, and height of the graph.\n\nOverall, the `Graph` class is an important component of the PlayCanvas engine project that provides real-time performance graph visualizations. It is used to monitor the performance of the application and can be customized to fit the needs of the developer.",
  "questions": "1. What is the purpose of the `Graph` class?\n- The `Graph` class is a real-time performance graph visual.\n\n2. What parameters does the `Graph` constructor take?\n- The `Graph` constructor takes `name`, `app`, `watermark`, `textRefreshRate`, and `timer` as parameters.\n\n3. What is the purpose of the `loseContext` method?\n- The `loseContext` method releases all context related resources when the context is lost."
}