{
  "fileName": "posteffect-brightnesscontrast.js",
  "filePath": "scripts/posteffects/posteffect-brightnesscontrast.js",
  "url": "https://github.com/playcanvas/engine/scripts/posteffects/posteffect-brightnesscontrast.js",
  "summary": "The code defines a post-processing effect called BrightnessContrastEffect that can be applied to a render target. The effect changes the brightness and contrast of the input render target. The code creates a new instance of the post effect by extending the PostEffect class. The constructor takes a graphics device as a parameter and initializes the brightness and contrast properties to 0.\n\nThe BrightnessContrastEffect class has a render method that takes an inputTarget, outputTarget, and rect as parameters. The method sets the brightness and contrast values as uniforms on the shader, sets the input color buffer as a uniform, and draws a quad to the output target using the shader.\n\nThe code also defines a script called BrightnessContrast that creates an instance of the BrightnessContrastEffect and adds it to the camera's postEffects queue. The script has two attributes, brightness and contrast, that can be set in the editor. When the script is initialized, it creates a new instance of the BrightnessContrastEffect and sets its brightness and contrast properties to the values of the script's attributes. It then adds the effect to the camera's postEffects queue. When the script's attributes are changed, it updates the effect's properties accordingly. When the script is enabled or disabled, it adds or removes the effect from the postEffects queue.\n\nThis code can be used in the larger PlayCanvas engine project to create custom post-processing effects for games and applications. The BrightnessContrastEffect can be used to adjust the brightness and contrast of a scene, which can be useful for creating different moods or emphasizing certain elements. The script can be attached to a camera entity to apply the effect to the scene. The attributes can be adjusted in the editor to fine-tune the effect. Overall, this code provides a flexible and customizable way to add post-processing effects to PlayCanvas projects.",
  "questions": "1. What does this code do?\n- This code defines a post effect called BrightnessContrastEffect that changes the brightness and contrast of the input render target. It also creates a script called BrightnessContrast that initializes the effect and adds it to the camera's post effects queue.\n\n2. What are the valid ranges for the brightness and contrast properties?\n- The brightness and contrast properties both have valid ranges from -1 to 1. A value of -1 represents solid black or gray, 0 represents no change, and 1 represents solid white or maximum contrast.\n\n3. Who is the author of the shader used in this code?\n- The shader used in this code was authored by tapio and can be found at http://tapio.github.com/."
}