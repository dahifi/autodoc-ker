{
  "fileName": "tracking-camera.js",
  "filePath": "scripts/camera/tracking-camera.js",
  "url": "https://github.com/playcanvas/engine/scripts/camera/tracking-camera.js",
  "summary": "The code above defines a script called `trackingCamera` in the PlayCanvas engine project. This script is responsible for tracking the position of a target entity and updating the camera's position to follow it.\n\nThe `TrackingCamera` script has one attribute called `target`, which is of type `entity`. This attribute is used to specify the entity that the camera should track.\n\nThe `postUpdate` function is called every frame and is responsible for updating the camera's position. If the `target` attribute is set, the function retrieves the position of the target entity and updates the camera's position to look at it using the `lookAt` method.\n\nThis script can be used in a variety of scenarios, such as in a game where the camera needs to follow the player character. By attaching the `TrackingCamera` script to the camera entity and setting the `target` attribute to the player entity, the camera will automatically follow the player's movements.\n\nHere is an example of how to use the `TrackingCamera` script in PlayCanvas:\n\n```javascript\n// create a camera entity\nvar cameraEntity = new pc.Entity('camera');\ncameraEntity.addComponent('camera');\n\n// create a player entity\nvar playerEntity = new pc.Entity('player');\n\n// add the TrackingCamera script to the camera entity\ncameraEntity.addComponent('script');\ncameraEntity.script.create('trackingCamera', {\n    target: playerEntity\n});\n\n// add the camera and player entities to the scene\napp.root.addChild(cameraEntity);\napp.root.addChild(playerEntity);\n```\n\nIn this example, the `TrackingCamera` script is attached to the camera entity and the `target` attribute is set to the player entity. As a result, the camera will follow the player's movements in the scene.",
  "questions": "1. **What is the purpose of this script?** \n    This script is called \"trackingCamera\" and it appears to be used for updating the position of the camera to follow a target entity.\n\n2. **What type of attribute is the 'target' attribute?** \n    The 'target' attribute is of type 'entity', which suggests that it is used to reference another entity in the scene.\n\n3. **What does the 'postUpdate' function do?** \n    The 'postUpdate' function is called every frame and checks if there is a target entity. If there is, it updates the position of the camera to look at the target entity's position."
}