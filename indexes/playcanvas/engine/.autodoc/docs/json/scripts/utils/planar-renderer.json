{
  "fileName": "planar-renderer.js",
  "filePath": "scripts/utils/planar-renderer.js",
  "url": "https://github.com/playcanvas/engine/scripts/utils/planar-renderer.js",
  "summary": "The `PlanarRenderer` script is used to create a reflection texture of a scene that can be used to create reflections on objects in the scene. The script requires a reflection entity with a camera component and its layers set up to what needs to be reflected. The script is then added to the entity, and the `sceneCameraEntity` attribute is set to the main camera of the scene. The `frameUpdate` function is then called to update the reflection texture. This function needs to be called after the main camera properties, including the transform, have been set already.\n\nThe script has several attributes that can be set to customize the reflection texture. The `scale` attribute sets the scale of the texture compared to the render buffer of the main camera. The `mipmaps` attribute, if set to true, generates mipmaps. The `depth` attribute, if set to true, creates a depth buffer. The `planePoint` attribute sets the point on a reflection plane, and the `planeNormal` attribute sets the normal of a reflection plane.\n\nThe `initialize` function is called once per entity and initializes the `plane` and `reflectionMatrix` variables. It also checks if the `sceneCameraEntity` and `entity` have camera components. When the camera is finished rendering, the `onPlanarPostRender` event is triggered on the entity. This event can be listened to by the user, and the resulting texture can be further processed (e.g., prefiltered).\n\nThe `updateRenderTarget` function updates the reflection texture's resolution based on the main camera's resolution and the `scale` attribute. It also limits the maximum texture size and creates a new texture render target with the specified resolution and mipmap generation. If the render target already exists, it is destroyed, and a new one is created.\n\nThe `frameUpdate` function updates the reflection camera orientation by mirroring the scene camera by the plane. It then copies other properties from the scene camera, such as the field of view, orthographic height, near and far clip planes, aperture, sensitivity, and shutter. Finally, it returns the texture.\n\nOverall, the `PlanarRenderer` script is a useful tool for creating reflection textures in a scene. It is easy to use and customizable, allowing for a wide range of reflection effects.",
  "questions": "1. What is the purpose of this code?\n- This code is for creating a reflection entity with a camera component and updating the reflection texture.\n\n2. What attributes can be added to the PlanarRenderer script?\n- The attributes that can be added to the PlanarRenderer script are sceneCameraEntity, scale, mipmaps, depth, planePoint, and planeNormal.\n\n3. What happens in the initialize function of the PlanarRenderer script?\n- In the initialize function of the PlanarRenderer script, the sceneCameraEntity and planarCamera are checked if they have camera components. If they don't, an error message is logged. Then, the onPostRender event is triggered when the camera is finished rendering."
}