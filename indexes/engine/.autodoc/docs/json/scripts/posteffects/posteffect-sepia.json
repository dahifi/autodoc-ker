{
  "fileName": "posteffect-sepia.js",
  "filePath": "scripts/posteffects/posteffect-sepia.js",
  "url": "https://github.com/playcanvas/engine/scripts/posteffects/posteffect-sepia.js",
  "summary": "## PlayCanvas Engine: SepiaEffect\n\nThe `SepiaEffect` class is a post-processing effect that applies a sepia tone filter to the rendered scene. It is a subclass of the `PostEffect` class, which is a base class for all post-processing effects in the PlayCanvas engine.\n\n### Usage\n\nTo use the `SepiaEffect` in a PlayCanvas project, you can create an instance of the `Sepia` script and attach it to a camera entity. This will add the effect to the camera's post-processing queue, which will apply the effect to the rendered scene.\n\n```javascript\nvar cameraEntity = app.root.findByName('Camera');\ncameraEntity.addComponent('script');\ncameraEntity.script.create('sepia', {\n    amount: 0.5\n});\n```\n\n### Properties\n\nThe `SepiaEffect` class has a single property:\n\n- `amount`: Controls the intensity of the effect. Ranges from 0 to 1.\n\n### Implementation\n\nThe `SepiaEffect` class overrides the `render` method of the `PostEffect` class. This method is called by the engine during the post-processing stage of rendering. It takes an input target, an output target, and a rectangle that defines the area of the screen to render to.\n\nThe method sets the value of the `uAmount` uniform in the shader to the value of the `amount` property. It then sets the value of the `uColorBuffer` uniform to the color buffer of the input target. Finally, it calls the `drawQuad` method of the `PostEffect` class to render the effect to the output target using the `SepiaShader`.\n\nThe `SepiaShader` is a fragment shader that applies the sepia tone filter to the rendered scene. It takes the color of each pixel in the scene and applies a matrix transformation to it to produce the sepia tone effect.\n\n### Script Definition\n\nThe `Sepia` script is a PlayCanvas script that provides a user-friendly interface for the `SepiaEffect` class. It allows the user to set the `amount` property of the effect using the PlayCanvas editor.\n\nThe `initialize` method of the script creates an instance of the `SepiaEffect` class and adds it to the camera's post-processing queue. It also sets up event listeners to update the effect's `amount` property when the user changes the value in the editor, and to remove the effect from the queue when the script is destroyed.",
  "questions": "1. What does this code do?\n- This code defines a post effect called SepiaEffect that applies a sepia color filter to an input texture.\n\n2. What is the purpose of the `amount` property?\n- The `amount` property controls the intensity of the sepia effect, ranging from 0 to 1.\n\n3. How is the SepiaEffect applied to a camera in the scene?\n- The SepiaEffect is added to the postEffects queue of a camera entity in the scene, and its `amount` property can be adjusted through the `attr:amount` event."
}