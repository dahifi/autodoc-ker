{
  "fileName": "curve-evaluator.js",
  "filePath": "src/core/math/curve-evaluator.js",
  "url": "https://github.com/playcanvas/engine/src/core/math/curve-evaluator.js",
  "summary": "The code defines a class called `CurveEvaluator` that is used to evaluate a curve at a specific time. The class takes a `Curve` object and an initial time as input and provides a method called `evaluate` that returns the value of the curve at the given time. The class also has a private method called `_reset` that is used to calculate the weights for the curve interval at the given time.\n\nThe `CurveEvaluator` class supports different types of curves, including linear, step, smoothstep, and hermite curves. The type of curve is determined by the `type` property of the `Curve` object. If the curve is a step curve, the `evaluate` method returns the value of the first key of the curve. If the curve is a linear or smoothstep curve, the `evaluate` method calculates the normalized time `t` and uses it to interpolate between the two keys of the curve. If the curve is a hermite curve, the `evaluate` method calculates the tangents for the curve and uses them to evaluate the curve at the given time.\n\nThe `CurveEvaluator` class is used in the larger PlayCanvas engine project to provide a way to evaluate curves used in animations and other parts of the engine. For example, the `Curve` object is used in the `Animation` class to define the animation curves for each property of an animated entity. The `CurveEvaluator` class is then used to evaluate these curves at each frame of the animation to determine the value of the property at that time.\n\nExample usage:\n\n```javascript\nimport { CurveEvaluator } from 'playcanvas';\n\n// create a curve object\nconst curve = {\n    type: 'linear',\n    keys: [\n        [0, 0],\n        [1, 1]\n    ]\n};\n\n// create a curve evaluator object\nconst evaluator = new CurveEvaluator(curve);\n\n// evaluate the curve at time 0.5\nconst value = evaluator.evaluate(0.5);\n\nconsole.log(value); // 0.5\n```",
  "questions": "1. What is the purpose of the `CurveEvaluator` class?\n- The `CurveEvaluator` class is used to evaluate a curve at a specific time.\n\n2. What types of curves are supported by this code?\n- The code supports several types of curves, including linear, smoothstep, and hermite curves (specifically, Catmull-Rom, Cardinal, and cubic splines).\n\n3. How are tangents calculated for hermite curves?\n- Tangents for hermite curves are calculated using a formula that takes into account the tension of the curve and the spacing of the knots. The specific formula used depends on the type of hermite curve being evaluated."
}