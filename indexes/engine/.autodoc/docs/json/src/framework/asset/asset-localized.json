{
  "fileName": "asset-localized.js",
  "filePath": "src/framework/asset/asset-localized.js",
  "url": "https://github.com/playcanvas/engine/src/framework/asset/asset-localized.js",
  "summary": "The `LocalizedAsset` class is a subclass of the `EventHandler` class and is used to manage localized assets in the PlayCanvas engine. It provides functionality to load and manage localized assets based on the current locale set in the `app.i18n` object. \n\nWhen an instance of the `LocalizedAsset` class is created, it takes an instance of the `app` object as a parameter. The `app` object is an instance of the `Application` class and is used to manage the PlayCanvas application. The `LocalizedAsset` class listens for the `set:locale` event on the `app.i18n` object and calls the `_onSetLocale` method when the event is fired.\n\nThe `LocalizedAsset` class has several properties that can be set or retrieved using getter and setter methods. These properties include `defaultAsset`, `localizedAsset`, `autoLoad`, and `disableLocalization`. \n\nThe `defaultAsset` property is used to set the default asset that will be used if a localized asset is not available for the current locale. The `localizedAsset` property is used to set the localized asset that will be used if available for the current locale. The `autoLoad` property is used to automatically load the localized asset when it is set. The `disableLocalization` property is used to disable localization and always use the default asset.\n\nThe `LocalizedAsset` class also has several private methods that are used to bind and unbind events to assets and handle events related to assets. These methods include `_bindDefaultAsset`, `_unbindDefaultAsset`, `_onDefaultAssetAdd`, `_onDefaultAssetRemove`, `_bindLocalizedAsset`, `_unbindLocalizedAsset`, `_onLocalizedAssetAdd`, `_onLocalizedAssetLoad`, `_onLocalizedAssetChange`, `_onLocalizedAssetRemove`, `_onLocaleAdd`, `_onLocaleRemove`, and `_onSetLocale`.\n\nThe `LocalizedAsset` class can be used in the larger PlayCanvas project to manage localized assets and provide localized content to users based on their locale. For example, a game developer could use the `LocalizedAsset` class to provide different audio files for different languages or different textures for different regions. The `LocalizedAsset` class provides a simple and efficient way to manage localized assets in the PlayCanvas engine. \n\nExample usage:\n\n```javascript\nconst app = new pc.Application();\nconst localizedAsset = new pc.LocalizedAsset(app);\n\n// set the default asset\nlocalizedAsset.defaultAsset = 'myAudioFile.mp3';\n\n// set the localized asset for French\nlocalizedAsset.localizedAsset = 'myAudioFile_fr.mp3';\n\n// automatically load the localized asset\nlocalizedAsset.autoLoad = true;\n\n// disable localization and always use the default asset\nlocalizedAsset.disableLocalization = true;\n```",
  "questions": "1. What is the purpose of this code and how does it fit into the PlayCanvas engine?\n- This code defines a class called `LocalizedAsset` that extends `EventHandler` and is used to manage localized assets in the PlayCanvas engine.\n2. What properties and methods are available on the `LocalizedAsset` class?\n- The `LocalizedAsset` class has properties for `defaultAsset`, `localizedAsset`, `autoLoad`, and `disableLocalization`, as well as methods for binding and unbinding assets and handling events related to asset loading and localization.\n3. How does the `LocalizedAsset` class determine which asset to use for a given locale?\n- The `LocalizedAsset` class checks the `defaultAsset` for a localized version of the asset corresponding to the current locale, and if one exists, it uses that asset. If no localized version exists, it falls back to the `defaultAsset`."
}