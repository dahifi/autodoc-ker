{
  "fileName": "xr-image-tracking.js",
  "filePath": "src/framework/xr/xr-image-tracking.js",
  "url": "https://github.com/playcanvas/engine/src/framework/xr/xr-image-tracking.js",
  "summary": "The `XrImageTracking` class is a part of the PlayCanvas engine project and provides the ability to track real-world images by providing image samples and their estimated sizes. This class extends the `EventHandler` class and is used to track images in an AR session. It is used in conjunction with the `XrTrackedImage` class, which contains tracking information for a single image.\n\nThe `XrImageTracking` class has a constructor that takes a `manager` parameter, which is an instance of the `XrManager` class. The constructor sets up event listeners for the `start` and `end` events of the `manager` object. When the `start` event is fired, the `_onSessionStart` method is called, which retrieves the tracked image scores and sets the `_available` property to true. When the `end` event is fired, the `_onSessionEnd` method is called, which sets the `_available` property to false and resets the tracking information for all images.\n\nThe `XrImageTracking` class has an `add` method that takes an `image` parameter and a `width` parameter. The `image` parameter is an image that matches a real-world image as closely as possible, and the `width` parameter is the width of the image in the real world. The method creates a new `XrTrackedImage` object with the provided parameters and adds it to the `_images` array. If image tracking is not supported or the XR manager is not active, the method returns null.\n\nThe `XrImageTracking` class also has a `remove` method that takes a `trackedImage` parameter. The method removes the `trackedImage` object from the `_images` array and destroys it.\n\nThe `XrImageTracking` class has a `prepareImages` method that takes a `callback` parameter. The method prepares all images in the `_images` array as image bitmaps and calls the `callback` function when all images have been prepared.\n\nThe `XrImageTracking` class has an `update` method that takes a `frame` parameter. The method updates the tracking information for all images in the `_images` array based on the results of the `getImageTrackingResults` method of the `frame` object. If an image is being tracked and is no longer visible, the method fires an `untracked` event. If an image is not being tracked and becomes visible, the method fires a `tracked` event.\n\nThe `XrImageTracking` class has three properties: `supported`, `available`, and `images`. The `supported` property is a boolean that indicates whether image tracking is supported. The `available` property is a boolean that indicates whether image tracking is available. The `images` property is an array of `XrTrackedImage` objects that contain tracking information for all images being tracked.\n\nOverall, the `XrImageTracking` class provides a way to track real-world images in an AR session and is an important part of the PlayCanvas engine project.",
  "questions": "1. What is the purpose of this code?\n- This code provides the ability to track real world images by provided image samples and their estimated sizes.\n\n2. What is the format of the image that can be added for image tracking?\n- The image can be in the format of HTMLCanvasElement, HTMLImageElement, SVGImageElement, HTMLVideoElement, Blob, ImageData, or ImageBitmap.\n\n3. When can an image be removed from image tracking?\n- An image can be removed from image tracking only before an AR session is started."
}