{
  "fileName": "release.js",
  "filePath": "release.js",
  "url": "https://github.com/playcanvas/engine/release.js",
  "summary": "The code is a Node.js script that automates the process of creating and finalizing releases for the PlayCanvas engine. The script is designed to be run from the command line and takes two optional arguments: `create-release` and `finalize-release`. If no arguments are provided, the script will determine the appropriate operation based on the current Git branch.\n\nThe script uses several Node.js modules, including `child_process`, `readline`, and `fs`. The `child_process` module is used to execute Git commands, `readline` is used to prompt the user for confirmation, and `fs` is used to read and write files.\n\nThe script defines several functions that are used to read and manipulate the version number in the `package.json` file, create and finalize release branches, and prompt the user for confirmation. The `readPackageVersion` function reads the current version number from `package.json` and returns an object with the major, minor, patch, and build numbers. The `bumpPackageVersion` function takes a version object and a release type (major, minor, or patch) and returns a new version object with the appropriate number incremented. The `evolvePackageVersion` function takes a version object and returns a new version object with the build number set to `null` if it exists, or the patch number incremented if it does not.\n\nThe `createRelease` function creates a new release branch based on the current `main` branch. It prompts the user for confirmation, creates the new branch, updates the version number in `package.json`, and commits the changes. The `finalizeRelease` function finalizes the current release branch by updating the version number in `package.json`, committing the changes, and creating a Git tag for the release.\n\nThe `getUserConfirmation` function prompts the user with a question and invokes a callback if the user responds with `y` or `Y`. The `exec` function executes a Git command and returns the output as a string.\n\nThe `run` function determines the appropriate operation based on the command line arguments or the current Git branch. It calls the `createRelease` or `finalizeRelease` function as appropriate, or prints the usage information if the arguments are invalid.\n\nOverall, this script provides a convenient way to automate the release process for the PlayCanvas engine, reducing the risk of human error and ensuring that the version numbers and Git branches are consistent.",
  "questions": "1. What does this code do?\n- This code is a script for managing the release process of the PlayCanvas engine. It allows the user to create a new minor release branch, finalize the package version, and tag the release.\n\n2. What dependencies does this code have?\n- This code requires the `child_process`, `readline`, and `fs` modules.\n\n3. What is the purpose of the `evolvePackageVersion` function?\n- The `evolvePackageVersion` function is used to evolve the package version for releases. If the current version has a build number, it will remove the build number. Otherwise, it will bump the patch version number."
}